apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add checkstyle, findbugs, pmd and lint to the check task.
check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'
// to speed up Instant Run
//preBuild.dependsOn 'checkstyle'

checkstyle {
  // will fire "java.lang.ClassNotFoundException: com.puppycrawl.tools.checkstyle
  // .CheckStyleTask" with version 6.10.1
  toolVersion '6.5'

  configFile file("${project.rootDir}/AndroidCodeQualityConfig/quality/checkstyle/checkstyle.xml")
  configProperties.checkstyleSuppressionFilterPath = file(
          "${project.rootDir}/AndroidCodeQualityConfig/quality/checkstyle/suppressions.xml")
          .absolutePath
}
task checkstyle(type: Checkstyle, group: 'verification') {
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'
  classpath = files()
}

findbugs {
  toolVersion = "3.0.1"
  ignoreFailures = false
  effort = "max"
  reportLevel = "high"
  excludeFilter = new File(
          "${project.rootDir}/AndroidCodeQualityConfig/quality/findbugs/findbugs-filter.xml")
}
task findbugs(type: FindBugs, dependsOn: assemble, group: 'verification') {
  classes = files("${project.rootDir}/${project.getName()}/build/intermediates/classes")
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    html.enabled = true
    xml {
      destination "${project.rootDir}/${project.getName()}/build/reports/findbugs/findbugs.xml"
    }
    html {
      destination "${project.rootDir}/${project.getName()}/build/reports/findbugs/findbugs.html"
    }
  }

  classpath = files()
}

pmd {
  toolVersion = '5.3.3'
  ignoreFailures = false
  ruleSetFiles = files("${project.rootDir}/AndroidCodeQualityConfig/quality/pmd/pmd-ruleset.xml")
  ruleSets = []
}
task pmd(type: Pmd, group: 'verification') {
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    html.enabled = true
    xml {
      destination "${project.rootDir}/${project.getName()}/build/reports/pmd/pmd.xml"
    }
    html {
      destination "${project.rootDir}/${project.getName()}/build/reports/pmd/pmd.html"
    }
  }
}

android {
  lintOptions {
    abortOnError true
    xmlReport true
    htmlReport true
    lintConfig file("${project.rootDir}/AndroidCodeQualityConfig/quality/lint/lint.xml")
  }
}
apply from: "${project.rootDir}/AndroidCodeQualityConfig/lint-summary.gradle"
